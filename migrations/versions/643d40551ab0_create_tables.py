"""Create tables

Revision ID: 643d40551ab0
Revises: 
Create Date: 2025-04-17 17:45:24.872315

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel


# revision identifiers, used by Alembic.
revision: str = '643d40551ab0'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "author",
        sa.Column("author_id", sa.Integer(), nullable=False),
        sa.Column("name_author", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.PrimaryKeyConstraint("author_id"),
    )
    op.create_table(
        "genre",
        sa.Column("genre_id", sa.Integer(), nullable=False),
        sa.Column(
            "name_genre",
            sa.Enum(
                "ROMANCE",
                "ADVENTURE",
                "SCIENCE_FICTION",
                "DETECTIVE",
                "MYSTERY",
                "FANTASY",
                "HISTORICAL",
                name="genrechoices",
            ),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("genre_id"),
    )
    op.create_table(
        "book",
        sa.Column("book_id", sa.Integer(), nullable=False),
        sa.Column("title", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("price", sa.Float(), nullable=False),
        sa.Column("amount", sa.Integer(), nullable=False),
        sa.Column("author_id", sa.Integer(), nullable=False),
        sa.Column("genre_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["author_id"],
            ["author.author_id"],
        ),
        sa.ForeignKeyConstraint(
            ["genre_id"],
            ["genre.genre_id"],
        ),
        sa.PrimaryKeyConstraint("book_id"),
    )

    op.execute(
        """
        INSERT INTO
            genre(name_genre)
        VALUES
            ('ROMANCE'),
            ('ADVENTURE'),
            ('SCIENCE_FICTION'),
            ('DETECTIVE'),
            ('MYSTERY'),
            ('FANTASY'),
            ('HISTORICAL');
        """
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("book")
    op.drop_table("genre")
    op.drop_table("author")
    op.execute("DROP TYPE genrechoices;")
    # ### end Alembic commands ###
